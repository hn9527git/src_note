tuxedo：
	是一个事务处理监督器（TP），他管理联机事务处理(OLTP)系统操作的事物。客户通过结构化查询语言(SQL)调用，
	或者其它类型的请求，产生对服务器的请求。TP确信，正确的进行了修改，以保证数据的完整性。
	这在一个事物可以改变多个位置的数据库的分布式数据库环境是非常重要的。这个TP使用双阶段提交，
	以保证所有的数据库已经接受和认可了这些数据的正确性。否则，这个数据库返回他的事务前状态。
		
三层结构：
		把两层结构中部署在客户机和服务器上的业务逻辑抽取出来， 单独放到一个中间层上去
		处理，就构成了三层结构。
	客户机  Client 
		只处理表示(Presentation)逻辑，即显示用户界面、接收用户输入数据、提交交易请求、显示交易处理结果
	应用服务器
		只处理应用(Application)逻辑，即负责维护客户机和服务器之间的通信连接，提供命名、通信、事务、
		安全、并发、持久性、负载均衡等应用服务。
	后台数据库（ DBMS ）
		只提供数据服务，即负责提供数据存储、查询、复制等服务。
TUXEDO 系统：
		它提供了一个开放的环境， 支持各种各样的客户、数据库、网络、遗留系统和通讯方式，
	使得开发人员能够利用它建立跨硬件平台、数据库和操作系统的交互应用系统。
		在企业分布式联机交易系统 OLTP （online transactionprocessing）中，
			TUXEDO 常常作为一个事务管理器（ TM ）来协调分布式事务；
		在构建多层 C/S 应用系统中， 
			TUXEDO 经常以一个中间件的角色部署在客户机和服务器之间，提供
		在构建企业级应用系统中， 
			TUXEDO 经常以一个应用服务器平台的角色出现，为企业应用提供一个部署环境和运行环境
TUXEDO 核心系统组成：
	Tuxedo 元素，包括配置信息库和实现运行时应用管理的核心子系统
	BEA TUXEDO是由服务器端的事务管理器，可靠队列管理，应用域以及客户端工作站等组成。
	1.公告板 BB：
		Tuxedo 应用配置文件被映射到一个运行时数据结构：公告板（ BB ），这个
		信息库 提供 Tuxedo 完成动态客户 /服务器映射所需的信息 ，同时也提供完成诸如负载平衡、
		安全性和事务协调等功能的信息
	2.事务管理器 /T
		事务管理器运行于服务器端，既是 Tuxedo 体系结构的中心，也是每个 Tuxedo 服务器
		的核心，提供重要的分布式应用服务，包括：命名、消息路由、负载平衡、配置管理、事务
		管理和安全性
	3.工作站 /WS
		工作站把 Tuxedo ATMI API 扩展到客户应用程序中，使得平台透明化。使用 ATMI 的
		客户端程序，可以访问在 Tuxedo 分布式环境中任何地方的服务。
		一个多路网关进程，称为 工作站监听进程（ WSL ） ，驻留在 Tuxedo 应用服务器上，配
		合工作站处理进程 Workstation Handler(WSH) ，处理工作站和事务管理器应用服务之间的
		通讯。 WSL 把来自大量客户应用程序的请求， 会聚到 Tuxedo 事务管理器， 以便完成所管辖
		的服务。
	4.可靠队列服务 /Q
		它为分布式联机事务处理应用程序提供了一种准实时的异步通信方式， 
		支持持久和非持久的消息存储机制， 提供面向事务的消息存
		取和转发机制， 以及多样化的出队机制。
	5.域 /DOMAIN
		为了有效实现与其他系统的互连， TUXEDO 提出了 DOMAIN 的概念， 将很多台服务器
		共同组成的应用系统按按功能或结构划分不同的域， 每个域独立完成域内的操作， 域间操作
		由域网关完成， 从而提高每个域和整个系统的运行效率
工作原理：
	TUXEDO 系统使用 IPC（Interprocess Communication ， 进程间通信）
		消息队列来实现请求 /应答式通信。消息队列是实现面向无连接通信的关键技术， TUXEDO
		系统会给每个服务进程分配一个 IPC 消息队列，称为请求队列，给每一个客户机分配一个
		响应队列。 这样客户机和服务器之间就不需要建立通信连接， 客户机把请求消息放入服务器
		的请求队列中，然后从自己的响应队列中检查响应结果。
	客户机要调用服务器提供的服务， 首先通过操作 1 向事务管理器发出服务请求， 服务端
		的事务管理器从公告板中查询服务的请求队列地址（ RQADDR ），通过操作 2 将队列地址返
		回给客户端； 客户机收到请求队列地址后， 将需要发送到服务的参数放入缓冲区， 并通过操
		作 3 将请求缓冲区发送到服务的请求队列； 服务器完成客户请求处理后， 通过操作 4 把响应
		结果发送到客户机的响应队列（ REPLYQ ），同时通过操作 5 更新公共板，写入服务处理情况。
TUXEDO客户端：
	TUXEDO 有两种类型的客户端，即本地客户端和远程客户端。
	本地客户端 （Native Client ）： 	
		通过共享内存与服务器进行通信， 从物理上看， 总是与 Tuxedo服务器部署在同一台机器上，
		不用通过网络就可以访问到 Tuxedo 服务器。
	远程客户端 （Workstation Client ）：
		总是使用 TCP/IP 协议和服务器进行通信，即便两者都部署在同一台主机上也是如此。
ATMI：
	ATMI,Application-to-Transaction Monitor Interface,即“应用事务监视接口”，
		是TUXEDO系统的编程接口。他实现了X/Open组织定义的分布式事务处理（DTP）模型，
		为应用程序提供命名、通信、队列、事务和缓冲区管理等基础服务。
	TPSERVRCINFO说明：
		char name[XATMI_SERVICE_NAME_LENGTH]; #该service的名字
		long flags;#CLIENT端在tpcall（）等的flags中设置的值
		char *data;#指向客户端发送过来的缓冲区的首地址
		。。。。。。
