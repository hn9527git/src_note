调试
strace:
	strace ./a.out #显示系统调用过程
	strace -c ./a.out 显示统计信息
	默认输出设备是STDERR
	strace -T ./a.out 显示调用时间
	strace -p pid 追踪任意进程
gdb:
	编译时加上 -g 否则看不见程序的函数名，变量名
	启动：gdb a.out 或 gdb a.out core 或gdb a.out 1234（进程ID）
	set agrs 1 2 3 :设置main函数的参数，通常gdb进去时就设置，在run和start之前即可
	或
	run 1 2 3：设置main的参数
	l(list):列出源码
	b 15: 在15行设置断点
	b func:在函数func处设置断点
	start:从第一行开始执行
	until 10:执行到某一行停下
	continue:继续往下执行
	s(step):进入函数，单步调试
	finish:退出函数
	info b (break):查看断点信息
	b if i=x:在循环或递归时设置参数等于x时停下//条件断点
	r(run):运行
	display i:之后每步执行都会打印i的值
	undislpay x:取消，使用编号
	n(next):单句执行
	p i:打印相关值
	ptype x:打印x的类型
	bt:查看函数的堆栈
	frame：切换栈帧
	set follow-fork-mode chlid//跟随子进程
	set follow-fork mode parent//跟随父进程
	q:结束调试
生成反汇编文件：
	objdump -dS a.out > out
gdb分析coredump文件：#该文件为服务不能正常响应时的操作系统信息的快照
	使用：gdb a.out core.test.13093
		直接显示在有问题的那一行
	或 gdb a.out
	   执行run//运行到出错的地方
	where 显示调用过程
top:
	当前时间：运行时间：运行用户数：负载(1min,5min,15min)
	进程总数：运行总数：睡眠总数：停止总数：僵尸总数
	用户CPU：内核：变优先级：空闲：io：硬中断：软中断：虚拟
	物理内存 总量：使用：空闲：内核缓存
	交换 总量：使用：空闲：缓冲的交换区总量
	进程号：运行用户：优先级：任务值：虚拟内存：物理内存：共享内存：状态：CPU占比：物理内
			存占比：累计占CPU时间：命令
进程的5种状态：
	1）运行2）中断3）不可中断4）僵死5）停止
ps:
	标识：
		D：不可中断
		R：运行
		S：中断
		T：停止
		Z：僵死
其他状态还包括
W:无驻留页
<:优先级高的进程
N:优先级较低的进程
L:有些页被锁进内存
s:进程的领导者
l:多进程的
+:位于后台的进程组