xml
文档声明：必须写在第一行
	<?xml version="1.0" encoding="UTF-8"?>
标签：
	所有标签都有关闭标签
特性：
	大小写敏感
	必须正确嵌套
	必须有根元素值//平级必须有相同的父级，类似tree结构
	属性必须加引号
实体符号：
	<	&lt
	>	&gt
	&	&ampr
	'	&apos
	"	&quot
元素：
	不能以xml、XML、数字或标点符号开头
	不能包含空格
禁止解析：
	<![CDATA[原样输出]]>
约束：//两种
	规定文档中只能写那些标签，并且给予提示
	DTD约束：
		使用外部dtd：
			本地：<!DOCTYPE 名称 SYSTEM "stu.dtd">
			网络：<!DOCTYPE 名称 PUBLIC "命名空间 "stu.dtd">
	schema:
		还可以约束标签中的信息的类型
解析：
		节点//Node
		文档节点//Document--元素节点Element--属性节点Attr--文本节点Text
	DOM解析：Document Object Model//文档对象模型，把文档中的成员描述成一个个对象
				Java操作XML//官方解析
			特点：一次性把整个XML加载进内存，在内存中形成一棵树
				  如果要修改，则需要同步操作//查询不需要同步
			步骤：1创建解析器工厂
				  2.通过解析器工厂得到解析器
				  3.通过解析器得到document对象
				  4.获取具体的节点内容
			修改：1.获取所有指定节点
				  2.获取要修改的节点
				  3.修改元素内容
				  4.从内存写到文档同步
			添加：1.创建一个节点
				  2.设置元素内容
				  3.获取要添加元素的父节点
				  4.添加节点
				  5.从内存写到文档同步
			删除：1.获取一个节点
				  2.获取该节点的父节点
				  3.从内存写到文档做同步
		添加属性：1.获取要添加属性的节点
				  2.把获取到的节点强制转换成element
				  3.设置属性
				  4.从内存写到文档做同步
	Sax:逐行读取，不占内存，不能回写，只能读取，开发不用
	dom4j解析：//民间解析、开源、性能好
			步骤：//获取所有指定标签内容
				  1.创建SAXReader
				  2.获取根元素
				  3.获取根元素下所有标签
				  4.遍历每一个子元素
				  5.获取指定名称的元素
				  6.获取标签中的文本

			
			

