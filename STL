STL六大组件：
1.容器：
	各种数据结构，如 vector, list, deque, set, map用来存放数据。
2.算法：
	各种常用算法。
3.迭代器：
	贯穿容器和算法。
4.仿函式：
	行为类似函数，重载了operator()的类或类模板，函数对象。
5.配接器：
	一种用来修饰容器（containers）或仿函式（functors）或迭代器（iterators）接口的东西
	例如stack、queue看似容器，其实底部完全借重deque。
6.配置器：
	负责空间配置与管理，是一个实现了动态空间配置、空间管理、空间释放的类模板。
//C++标准规定所有标准头文件不再有扩展名，但某些STL版本同时存在具扩展名和无扩展名的两份文件。
六大组件的交互关系：
	容器通过空间配置器取得数据存储空间，
	算法通过迭代器取得容器内容，
	仿函式协助算法完成不同的策略变化，
	配接器修饰或套接仿函式。
STL::allocator：
	new过程:
		1.呼叫::opreator new配置内存
		2.呼叫构造函数构造对象
	delete过程：
		1.呼叫析构函数将对象解构
		2.呼叫::operator delete释放内存
	为精密分工，STL::allocator将new和deleted的两阶段工作分开：
		内存配置动作由alloc::allocate()负责
		内存释放动作由alloc::deallocate()负责
		对象构造工作由::constuct()负责
		对象解构动作由::destory()负责
























